/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Collection, CollectionInterface } from "../../src/Collection";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
    ],
    name: "BatchMetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "metadata",
        type: "string",
      },
    ],
    name: "CardAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "MetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_cardCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_collectionName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_nextTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "_tokenList",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllNFTsWithDetails",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllNfts",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getCardMetadata",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCardsMetadataLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "tokenURI",
        type: "string",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "cardCount",
        type: "uint256",
      },
    ],
    name: "setAttributes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferCard",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200356038038062003560833981810160405281019062000037919062000202565b818181600090816200004a9190620004d2565b5080600190816200005c9190620004d2565b50505060006009819055505050620005b9565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000d8826200008d565b810181811067ffffffffffffffff82111715620000fa57620000f96200009e565b5b80604052505050565b60006200010f6200006f565b90506200011d8282620000cd565b919050565b600067ffffffffffffffff82111562000140576200013f6200009e565b5b6200014b826200008d565b9050602081019050919050565b60005b83811015620001785780820151818401526020810190506200015b565b60008484015250505050565b60006200019b620001958462000122565b62000103565b905082815260208101848484011115620001ba57620001b962000088565b5b620001c784828562000158565b509392505050565b600082601f830112620001e757620001e662000083565b5b8151620001f984826020860162000184565b91505092915050565b600080604083850312156200021c576200021b62000079565b5b600083015167ffffffffffffffff8111156200023d576200023c6200007e565b5b6200024b85828601620001cf565b925050602083015167ffffffffffffffff8111156200026f576200026e6200007e565b5b6200027d85828601620001cf565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002da57607f821691505b602082108103620002f057620002ef62000292565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200035a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200031b565b6200036686836200031b565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003b3620003ad620003a7846200037e565b62000388565b6200037e565b9050919050565b6000819050919050565b620003cf8362000392565b620003e7620003de82620003ba565b84845462000328565b825550505050565b600090565b620003fe620003ef565b6200040b818484620003c4565b505050565b5b81811015620004335762000427600082620003f4565b60018101905062000411565b5050565b601f82111562000482576200044c81620002f6565b62000457846200030b565b8101602085101562000467578190505b6200047f62000476856200030b565b83018262000410565b50505b505050565b600082821c905092915050565b6000620004a76000198460080262000487565b1980831691505092915050565b6000620004c2838362000494565b9150826002028217905092915050565b620004dd8262000287565b67ffffffffffffffff811115620004f957620004f86200009e565b5b620005058254620002c1565b6200051282828562000437565b600060209050601f8311600181146200054a576000841562000535578287015190505b620005418582620004b4565b865550620005b1565b601f1984166200055a86620002f6565b60005b8281101562000584578489015182556001820191506020850194506020810190506200055d565b86831015620005a45784890151620005a0601f89168262000494565b8355505b6001600288020188555050505b505050505050565b612f9780620005c96000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c80636352211e116100c3578063a22cb4651161007c578063a22cb465146103ef578063b60b118b1461040b578063b88d4fde14610429578063c87b56dd14610445578063e985e9c514610475578063ebf0ae4e146104a557610158565b80636352211e1461031b57806370a082311461034b578063732e8d731461037b57806373c275bc146103995780637f9f3161146103b557806395d89b41146103d157610158565b80632ed78ba2116101155780632ed78ba214610243578063349cd1131461026357806342842e0e1461028157806343c3f0a21461029d5780634a60f620146102cd5780634eb6b067146102eb57610158565b806301ffc9a71461015d57806306fdde031461018d578063081812fc146101ab578063095ea7b3146101db5780631c351a9d146101f757806323b872dd14610227575b600080fd5b61017760048036038101906101729190611fa8565b6104c3565b6040516101849190611ff0565b60405180910390f35b610195610524565b6040516101a2919061209b565b60405180910390f35b6101c560048036038101906101c091906120f3565b6105b6565b6040516101d29190612161565b60405180910390f35b6101f560048036038101906101f091906121a8565b6105d2565b005b610211600480360381019061020c919061231d565b6105e8565b60405161021e9190612388565b60405180910390f35b610241600480360381019061023c91906123a3565b61065d565b005b61024b61075f565b60405161025a9392919061267e565b60405180910390f35b61026b610925565b604051610278919061209b565b60405180910390f35b61029b600480360381019061029691906123a3565b6109b3565b005b6102b760048036038101906102b291906120f3565b6109d3565b6040516102c4919061209b565b60405180910390f35b6102d5610a78565b6040516102e29190612388565b60405180910390f35b610305600480360381019061030091906120f3565b610a7e565b604051610312919061209b565b60405180910390f35b610335600480360381019061033091906120f3565b610b2a565b6040516103429190612161565b60405180910390f35b610365600480360381019061036091906126ca565b610b3c565b6040516103729190612388565b60405180910390f35b610383610bf6565b60405161039091906126f7565b60405180910390f35b6103b360048036038101906103ae9190612719565b610ccf565b005b6103cf60048036038101906103ca91906123a3565b610cea565b005b6103d9610d43565b6040516103e6919061209b565b60405180910390f35b610409600480360381019061040491906127a1565b610dd5565b005b610413610deb565b6040516104209190612388565b60405180910390f35b610443600480360381019061043e9190612882565b610df1565b005b61045f600480360381019061045a91906120f3565b610e0e565b60405161046c919061209b565b60405180910390f35b61048f600480360381019061048a9190612905565b610f21565b60405161049c9190611ff0565b60405180910390f35b6104ad610fb5565b6040516104ba9190612388565b60405180910390f35b6000634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061051d575061051c82610fbf565b5b9050919050565b60606000805461053390612974565b80601f016020809104026020016040519081016040528092919081815260200182805461055f90612974565b80156105ac5780601f10610581576101008083540402835291602001916105ac565b820191906000526020600020905b81548152906001019060200180831161058f57829003601f168201915b5050505050905090565b60006105c1826110a1565b506105cb82611129565b9050919050565b6105e482826105df611166565b61116e565b5050565b60008060095490506105fa8382611180565b6106048185611279565b60016009600082825461061791906129d4565b92505081905550600b849080600181540180825580915050600190039060005260206000200160009091909190915090816106529190612bb4565b508091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106cf5760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016106c69190612161565b60405180910390fd5b60006106e383836106de611166565b6112d5565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610759578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161075093929190612c86565b60405180910390fd5b50505050565b6060806060600060095467ffffffffffffffff811115610782576107816121f2565b5b6040519080825280602002602001820160405280156107b05781602001602082028036833780820191505090505b509050600060095467ffffffffffffffff8111156107d1576107d06121f2565b5b60405190808252806020026020018201604052801561080457816020015b60608152602001906001900390816107ef5790505b509050600060095467ffffffffffffffff811115610825576108246121f2565b5b6040519080825280602002602001820160405280156108535781602001602082028036833780820191505090505b50905060005b600954811015610913578084828151811061087757610876612cbd565b5b60200260200101818152505061088c81610e0e565b83828151811061089f5761089e612cbd565b5b60200260200101819052506108b381610b2a565b8282815181106108c6576108c5612cbd565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050808061090b90612cec565b915050610859565b50828282955095509550505050909192565b6007805461093290612974565b80601f016020809104026020016040519081016040528092919081815260200182805461095e90612974565b80156109ab5780601f10610980576101008083540402835291602001916109ab565b820191906000526020600020905b81548152906001019060200180831161098e57829003601f168201915b505050505081565b6109ce83838360405180602001604052806000815250610df1565b505050565b6060600a600083815260200190815260200160002080546109f390612974565b80601f0160208091040260200160405190810160405280929190818152602001828054610a1f90612974565b8015610a6c5780601f10610a4157610100808354040283529160200191610a6c565b820191906000526020600020905b815481529060010190602001808311610a4f57829003601f168201915b50505050509050919050565b60095481565b600b8181548110610a8e57600080fd5b906000526020600020016000915090508054610aa990612974565b80601f0160208091040260200160405190810160405280929190818152602001828054610ad590612974565b8015610b225780601f10610af757610100808354040283529160200191610b22565b820191906000526020600020905b815481529060010190602001808311610b0557829003601f168201915b505050505081565b6000610b35826110a1565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610baf5760006040517f89c62b64000000000000000000000000000000000000000000000000000000008152600401610ba69190612161565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600b805480602002602001604051908101604052809291908181526020016000905b82821015610cc6578382906000526020600020018054610c3990612974565b80601f0160208091040260200160405190810160405280929190818152602001828054610c6590612974565b8015610cb25780601f10610c8757610100808354040283529160200191610cb2565b820191906000526020600020905b815481529060010190602001808311610c9557829003601f168201915b505050505081526020019060010190610c1a565b50505050905090565b8160079081610cde9190612bb4565b50806008819055505050565b610cf483826114ef565b610d33576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2a90612da6565b60405180910390fd5b610d3e8383836109b3565b505050565b606060018054610d5290612974565b80601f0160208091040260200160405190810160405280929190818152602001828054610d7e90612974565b8015610dcb5780601f10610da057610100808354040283529160200191610dcb565b820191906000526020600020905b815481529060010190602001808311610dae57829003601f168201915b5050505050905090565b610de7610de0611166565b8383611584565b5050565b60085481565b610dfc84848461065d565b610e08848484846116f3565b50505050565b6060610e19826110a1565b506000600660008481526020019081526020016000208054610e3a90612974565b80601f0160208091040260200160405190810160405280929190818152602001828054610e6690612974565b8015610eb35780601f10610e8857610100808354040283529160200191610eb3565b820191906000526020600020905b815481529060010190602001808311610e9657829003601f168201915b505050505090506000610ec46118aa565b90506000815103610ed9578192505050610f1c565b600082511115610f0e578082604051602001610ef6929190612e02565b60405160208183030381529060405292505050610f1c565b610f17846118c1565b925050505b919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000600954905090565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061108a57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061109a57506110998261192a565b5b9050919050565b6000806110ad83611994565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361112057826040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016111179190612388565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b61117b83838360016119d1565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111f25760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016111e99190612161565b60405180910390fd5b6000611200838360006112d5565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146112745760006040517f73c6ac6e00000000000000000000000000000000000000000000000000000000815260040161126b9190612161565b60405180910390fd5b505050565b806006600084815260200190815260200160002090816112999190612bb4565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7826040516112c99190612388565b60405180910390a15050565b6000806112e184611994565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461132357611322818486611b96565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146113b4576113656000856000806119d1565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614611437576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b6000806114fb83610b2a565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061156a57508373ffffffffffffffffffffffffffffffffffffffff16611552846105b6565b73ffffffffffffffffffffffffffffffffffffffff16145b8061157b575061157a8185610f21565b5b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036115f557816040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016115ec9190612161565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516116e69190611ff0565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b11156118a4578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02611737611166565b8685856040518563ffffffff1660e01b81526004016117599493929190612e7b565b6020604051808303816000875af192505050801561179557506040513d601f19601f820116820180604052508101906117929190612edc565b60015b611819573d80600081146117c5576040519150601f19603f3d011682016040523d82523d6000602084013e6117ca565b606091505b50600081510361181157836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016118089190612161565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146118a257836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016118999190612161565b60405180910390fd5b505b50505050565b606060405180602001604052806000815250905090565b60606118cc826110a1565b5060006118d76118aa565b905060008151116118f75760405180602001604052806000815250611922565b8061190184611c5a565b604051602001611912929190612e02565b6040516020818303038152906040525b915050919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8080611a0a5750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15611b3e576000611a1a846110a1565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611a8557508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b8015611a985750611a968184610f21565b155b15611ada57826040517fa9fbf51f000000000000000000000000000000000000000000000000000000008152600401611ad19190612161565b60405180910390fd5b8115611b3c57838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b611ba1838383611d28565b611c5557600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611c1657806040517f7e273289000000000000000000000000000000000000000000000000000000008152600401611c0d9190612388565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611c4c929190612f09565b60405180910390fd5b505050565b606060006001611c6984611de9565b01905060008167ffffffffffffffff811115611c8857611c876121f2565b5b6040519080825280601f01601f191660200182016040528015611cba5781602001600182028036833780820191505090505b509050600082602001820190505b600115611d1d578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581611d1157611d10612f32565b5b04945060008503611cc8575b819350505050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611de057508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611da15750611da08484610f21565b5b80611ddf57508273ffffffffffffffffffffffffffffffffffffffff16611dc783611129565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611e47577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611e3d57611e3c612f32565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611e84576d04ee2d6d415b85acef81000000008381611e7a57611e79612f32565b5b0492506020810190505b662386f26fc100008310611eb357662386f26fc100008381611ea957611ea8612f32565b5b0492506010810190505b6305f5e1008310611edc576305f5e1008381611ed257611ed1612f32565b5b0492506008810190505b6127108310611f01576127108381611ef757611ef6612f32565b5b0492506004810190505b60648310611f245760648381611f1a57611f19612f32565b5b0492506002810190505b600a8310611f33576001810190505b80915050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611f8581611f50565b8114611f9057600080fd5b50565b600081359050611fa281611f7c565b92915050565b600060208284031215611fbe57611fbd611f46565b5b6000611fcc84828501611f93565b91505092915050565b60008115159050919050565b611fea81611fd5565b82525050565b60006020820190506120056000830184611fe1565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561204557808201518184015260208101905061202a565b60008484015250505050565b6000601f19601f8301169050919050565b600061206d8261200b565b6120778185612016565b9350612087818560208601612027565b61209081612051565b840191505092915050565b600060208201905081810360008301526120b58184612062565b905092915050565b6000819050919050565b6120d0816120bd565b81146120db57600080fd5b50565b6000813590506120ed816120c7565b92915050565b60006020828403121561210957612108611f46565b5b6000612117848285016120de565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061214b82612120565b9050919050565b61215b81612140565b82525050565b60006020820190506121766000830184612152565b92915050565b61218581612140565b811461219057600080fd5b50565b6000813590506121a28161217c565b92915050565b600080604083850312156121bf576121be611f46565b5b60006121cd85828601612193565b92505060206121de858286016120de565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61222a82612051565b810181811067ffffffffffffffff82111715612249576122486121f2565b5b80604052505050565b600061225c611f3c565b90506122688282612221565b919050565b600067ffffffffffffffff821115612288576122876121f2565b5b61229182612051565b9050602081019050919050565b82818337600083830152505050565b60006122c06122bb8461226d565b612252565b9050828152602081018484840111156122dc576122db6121ed565b5b6122e784828561229e565b509392505050565b600082601f830112612304576123036121e8565b5b81356123148482602086016122ad565b91505092915050565b6000806040838503121561233457612333611f46565b5b600083013567ffffffffffffffff81111561235257612351611f4b565b5b61235e858286016122ef565b925050602061236f85828601612193565b9150509250929050565b612382816120bd565b82525050565b600060208201905061239d6000830184612379565b92915050565b6000806000606084860312156123bc576123bb611f46565b5b60006123ca86828701612193565b93505060206123db86828701612193565b92505060406123ec868287016120de565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61242b816120bd565b82525050565b600061243d8383612422565b60208301905092915050565b6000602082019050919050565b6000612461826123f6565b61246b8185612401565b935061247683612412565b8060005b838110156124a757815161248e8882612431565b975061249983612449565b92505060018101905061247a565b5085935050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b60006124fc8261200b565b61250681856124e0565b9350612516818560208601612027565b61251f81612051565b840191505092915050565b600061253683836124f1565b905092915050565b6000602082019050919050565b6000612556826124b4565b61256081856124bf565b935083602082028501612572856124d0565b8060005b858110156125ae578484038952815161258f858261252a565b945061259a8361253e565b925060208a01995050600181019050612576565b50829750879550505050505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6125f581612140565b82525050565b600061260783836125ec565b60208301905092915050565b6000602082019050919050565b600061262b826125c0565b61263581856125cb565b9350612640836125dc565b8060005b8381101561267157815161265888826125fb565b975061266383612613565b925050600181019050612644565b5085935050505092915050565b600060608201905081810360008301526126988186612456565b905081810360208301526126ac818561254b565b905081810360408301526126c08184612620565b9050949350505050565b6000602082840312156126e0576126df611f46565b5b60006126ee84828501612193565b91505092915050565b60006020820190508181036000830152612711818461254b565b905092915050565b600080604083850312156127305761272f611f46565b5b600083013567ffffffffffffffff81111561274e5761274d611f4b565b5b61275a858286016122ef565b925050602061276b858286016120de565b9150509250929050565b61277e81611fd5565b811461278957600080fd5b50565b60008135905061279b81612775565b92915050565b600080604083850312156127b8576127b7611f46565b5b60006127c685828601612193565b92505060206127d78582860161278c565b9150509250929050565b600067ffffffffffffffff8211156127fc576127fb6121f2565b5b61280582612051565b9050602081019050919050565b6000612825612820846127e1565b612252565b905082815260208101848484011115612841576128406121ed565b5b61284c84828561229e565b509392505050565b600082601f830112612869576128686121e8565b5b8135612879848260208601612812565b91505092915050565b6000806000806080858703121561289c5761289b611f46565b5b60006128aa87828801612193565b94505060206128bb87828801612193565b93505060406128cc878288016120de565b925050606085013567ffffffffffffffff8111156128ed576128ec611f4b565b5b6128f987828801612854565b91505092959194509250565b6000806040838503121561291c5761291b611f46565b5b600061292a85828601612193565b925050602061293b85828601612193565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061298c57607f821691505b60208210810361299f5761299e612945565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006129df826120bd565b91506129ea836120bd565b9250828201905080821115612a0257612a016129a5565b5b92915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302612a6a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612a2d565b612a748683612a2d565b95508019841693508086168417925050509392505050565b6000819050919050565b6000612ab1612aac612aa7846120bd565b612a8c565b6120bd565b9050919050565b6000819050919050565b612acb83612a96565b612adf612ad782612ab8565b848454612a3a565b825550505050565b600090565b612af4612ae7565b612aff818484612ac2565b505050565b5b81811015612b2357612b18600082612aec565b600181019050612b05565b5050565b601f821115612b6857612b3981612a08565b612b4284612a1d565b81016020851015612b51578190505b612b65612b5d85612a1d565b830182612b04565b50505b505050565b600082821c905092915050565b6000612b8b60001984600802612b6d565b1980831691505092915050565b6000612ba48383612b7a565b9150826002028217905092915050565b612bbd8261200b565b67ffffffffffffffff811115612bd657612bd56121f2565b5b612be08254612974565b612beb828285612b27565b600060209050601f831160018114612c1e5760008415612c0c578287015190505b612c168582612b98565b865550612c7e565b601f198416612c2c86612a08565b60005b82811015612c5457848901518255600182019150602085019450602081019050612c2f565b86831015612c715784890151612c6d601f891682612b7a565b8355505b6001600288020188555050505b505050505050565b6000606082019050612c9b6000830186612152565b612ca86020830185612379565b612cb56040830184612152565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000612cf7826120bd565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612d2957612d286129a5565b5b600182019050919050565b7f566f7573206e6520706f7576657a207472616e7366657265722071756520766f60008201527f732070726f707265732063617274657300000000000000000000000000000000602082015250565b6000612d90603083612016565b9150612d9b82612d34565b604082019050919050565b60006020820190508181036000830152612dbf81612d83565b9050919050565b600081905092915050565b6000612ddc8261200b565b612de68185612dc6565b9350612df6818560208601612027565b80840191505092915050565b6000612e0e8285612dd1565b9150612e1a8284612dd1565b91508190509392505050565b600081519050919050565b600082825260208201905092915050565b6000612e4d82612e26565b612e578185612e31565b9350612e67818560208601612027565b612e7081612051565b840191505092915050565b6000608082019050612e906000830187612152565b612e9d6020830186612152565b612eaa6040830185612379565b8181036060830152612ebc8184612e42565b905095945050505050565b600081519050612ed681611f7c565b92915050565b600060208284031215612ef257612ef1611f46565b5b6000612f0084828501612ec7565b91505092915050565b6000604082019050612f1e6000830185612152565b612f2b6020830184612379565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea2646970667358221220f3fe1be31c6cde413c26cbc6c38954fc2ae25466009585f4f764739ae8dc62a764736f6c63430008140033";

type CollectionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CollectionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Collection__factory extends ContractFactory {
  constructor(...args: CollectionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Collection> {
    return super.deploy(_name, _symbol, overrides || {}) as Promise<Collection>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, _symbol, overrides || {});
  }
  override attach(address: string): Collection {
    return super.attach(address) as Collection;
  }
  override connect(signer: Signer): Collection__factory {
    return super.connect(signer) as Collection__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CollectionInterface {
    return new utils.Interface(_abi) as CollectionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Collection {
    return new Contract(address, _abi, signerOrProvider) as Collection;
  }
}
